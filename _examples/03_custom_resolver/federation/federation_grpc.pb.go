// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: federation/federation.proto

package federation

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	FederationV2DevService_GetPostV2Dev_FullMethodName = "/federation.v2dev.FederationV2devService/GetPostV2dev"
)

// FederationV2DevServiceClient is the client API for FederationV2DevService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FederationV2DevServiceClient interface {
	GetPostV2Dev(ctx context.Context, in *GetPostV2DevRequest, opts ...grpc.CallOption) (*GetPostV2DevResponse, error)
}

type federationV2DevServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFederationV2DevServiceClient(cc grpc.ClientConnInterface) FederationV2DevServiceClient {
	return &federationV2DevServiceClient{cc}
}

func (c *federationV2DevServiceClient) GetPostV2Dev(ctx context.Context, in *GetPostV2DevRequest, opts ...grpc.CallOption) (*GetPostV2DevResponse, error) {
	out := new(GetPostV2DevResponse)
	err := c.cc.Invoke(ctx, FederationV2DevService_GetPostV2Dev_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FederationV2DevServiceServer is the server API for FederationV2DevService service.
// All implementations must embed UnimplementedFederationV2DevServiceServer
// for forward compatibility
type FederationV2DevServiceServer interface {
	GetPostV2Dev(context.Context, *GetPostV2DevRequest) (*GetPostV2DevResponse, error)
	mustEmbedUnimplementedFederationV2DevServiceServer()
}

// UnimplementedFederationV2DevServiceServer must be embedded to have forward compatible implementations.
type UnimplementedFederationV2DevServiceServer struct {
}

func (UnimplementedFederationV2DevServiceServer) GetPostV2Dev(context.Context, *GetPostV2DevRequest) (*GetPostV2DevResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPostV2Dev not implemented")
}
func (UnimplementedFederationV2DevServiceServer) mustEmbedUnimplementedFederationV2DevServiceServer() {
}

// UnsafeFederationV2DevServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FederationV2DevServiceServer will
// result in compilation errors.
type UnsafeFederationV2DevServiceServer interface {
	mustEmbedUnimplementedFederationV2DevServiceServer()
}

func RegisterFederationV2DevServiceServer(s grpc.ServiceRegistrar, srv FederationV2DevServiceServer) {
	s.RegisterService(&FederationV2DevService_ServiceDesc, srv)
}

func _FederationV2DevService_GetPostV2Dev_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPostV2DevRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationV2DevServiceServer).GetPostV2Dev(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FederationV2DevService_GetPostV2Dev_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationV2DevServiceServer).GetPostV2Dev(ctx, req.(*GetPostV2DevRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FederationV2DevService_ServiceDesc is the grpc.ServiceDesc for FederationV2DevService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FederationV2DevService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "federation.v2dev.FederationV2devService",
	HandlerType: (*FederationV2DevServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPostV2dev",
			Handler:    _FederationV2DevService_GetPostV2Dev_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "federation/federation.proto",
}
