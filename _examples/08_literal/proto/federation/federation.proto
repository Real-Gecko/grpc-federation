syntax = "proto3";

package org.federation;

import "grpc/federation/federation.proto";
import "content/content.proto";

option go_package = "example/federation;federation";

service FederationService {
  option (grpc.federation.service) = {};
  rpc Get(GetRequest) returns (GetResponse) {};
}

message GetRequest {
  string id = 1;
}

message GetResponse {
  option (grpc.federation.message) = {
    def {
      name: "res"
      call {
        method: "content.ContentService/GetContent"
        request: [
          { field: "by_field",           by: "$.id" },
          { field: "double_field",       by: "1.23" },
          { field: "doubles_field",      by: "[4.56, 7.89]"},
          { field: "float_field",        by: "4.56" },
          { field: "floats_field",       by: "[7.89, 1.23]"},
          { field: "int32_field",        by: "-1" },
          { field: "int32s_field",       by: "[-2, -3]"},
          { field: "int64_field",        by: "-4"},
          { field: "int64s_field",       by: "[-5, -6]"},
          { field: "uint32_field",       by: "1u" },
          { field: "uint32s_field",      by: "[2u, 3u]"},
          { field: "uint64_field",       by: "4u" },
          { field: "uint64s_field",      by: "[5u, 6u]"},
          { field: "sint32_field",       by: "-7" },
          { field: "sint32s_field",      by: "[-8, -9]"},
          { field: "sint64_field",       by: "-10" },
          { field: "sint64s_field",      by: "[-11, -12]"},
          { field: "fixed32_field",      by: "10u" },
          { field: "fixed32s_field",     by: "[11u, 12u]"},
          { field: "fixed64_field",      by: "13u" },
          { field: "fixed64s_field",     by: "[14u, 15u]"},
          { field: "sfixed32_field",     by: "-14" },
          { field: "sfixed32s_field",    by: "[-15, -16]"},
          { field: "sfixed64_field",     by: "-17" },
          { field: "sfixed64s_field",    by: "[-18, -19]"},
          { field: "bool_field",         by: "true" },
          { field: "bools_field",        by: "[true, false]"},
          { field: "string_field",       by: "'foo'" },
          { field: "strings_field",      by: "['hello', 'world']"},
          { field: "byte_string_field",  by: "b'foo'" },
          { field: "byte_strings_field", by: "[b'foo', b'bar']"},
          { field: "enum_field",         by: "content.ContentType.CONTENT_TYPE_1" },
          { field: "enums_field",        by: "[content.ContentType.CONTENT_TYPE_2, content.ContentType.CONTENT_TYPE_3]"},
          { field: "message_field",       by: "content.Content{double_field: 1.23, doubles_field: [4.56, 7.89]}"},
          { field: "messages_field",     by: "[content.Content{}, content.Content{}]"}
        ]
      }
    }
    def { name: "content", by: "res.content" }
  };
  Content content  = 1 [(grpc.federation.field).by = "content"];
  int64 cel_expr = 2 [(grpc.federation.field).by = "content.int32_field + content.sint32_field"];
}

enum ContentType {
  option (grpc.federation.enum).alias = "content.ContentType";

  CONTENT_TYPE_1 = 0;
  CONTENT_TYPE_2 = 1;
  CONTENT_TYPE_3 = 2;
}

message Content {
  option (grpc.federation.message).alias = "content.Content";

  string by_field                   = 1;
  double double_field               = 2;
  repeated double doubles_field     = 3;
  float float_field                 = 4;
  repeated float floats_field       = 5;
  int32 int32_field                 = 6;
  repeated int32 int32s_field       = 7;
  int64 int64_field                 = 8;
  repeated int64 int64s_field       = 9;
  uint32 uint32_field               = 10;
  repeated uint32 uint32s_field     = 11;
  uint64 uint64_field               = 12;
  repeated uint64 uint64s_field     = 13;
  sint32 sint32_field               = 14;
  repeated sint32 sint32s_field     = 15;
  sint64 sint64_field               = 16;
  repeated sint64 sint64s_field     = 17;
  fixed32 fixed32_field             = 18;
  repeated fixed32 fixed32s_field   = 19;
  fixed64 fixed64_field             = 20;
  repeated fixed64 fixed64s_field   = 21;
  sfixed32 sfixed32_field           = 22;
  repeated sfixed32 sfixed32s_field = 23;
  sfixed64 sfixed64_field           = 24;
  repeated sfixed64 sfixed64s_field = 25;
  bool bool_field                   = 26;
  repeated bool bools_field         = 27;
  string string_field               = 28;
  repeated string strings_field     = 29;
  bytes byte_string_field           = 30;
  repeated bytes byte_strings_field = 31;
  ContentType enum_field            = 32;
  repeated ContentType enums_field  = 33;
  string env_field                  = 34;
  repeated string envs_field        = 35;
  Content message_field             = 36;
  repeated Content messages_field   = 37;
}
