syntax = "proto3";

package org.federation;

import "federation.proto";
import "nested_post.proto";

option go_package = "example/federation;federation";

service FederationService {
  option (grpc.federation.service) = {};
  rpc GetPost(GetPostRequest) returns (GetPostResponse) {};
}

message GetPostRequest {
  string id = 1;
}

message GetPostResponse {
  option (grpc.federation.message) = {
    def {
      name: "post"
      message {
        name: "Post"
        args { name: "id", by: "$.id" }
      }
    }
  };
  Post post = 1 [(grpc.federation.field).by = "post"];
}

message Post {
  option (grpc.federation.message) = {
    def {
      name: "res"
      call {
        method: "org.post.PostService/GetPost"
        request { field: "id", by: "$.id" }
      }
    }
    def { name: "post", by: "res.post", autobind: true }
  };
  string id = 1;
  PostData data = 4;
}

enum PostType {
  POST_TYPE_UNKNOWN = 0;
  POST_TYPE_FOO = 1;
  POST_TYPE_BAR = 2;
}

message PostData {
  PostType type = 1;
  string title = 2;
  PostContent content = 3 [(grpc.federation.field).alias = "content"];
}

message PostContent {
  enum Category {
    CATEGORY_A = 0;
    CATEGORY_B = 1;
  };

  Category category = 1;
  string head = 2;
  string body = 3;
}
