syntax = "proto3";

package org.federation;

import "federation.proto";

option go_package = "example/federation;federation";
option (grpc.federation.file) = {
  import: ["post.proto"]
};

service FederationService {
  option (grpc.federation.service) = {};
  rpc GetPost(GetPostRequest) returns (GetPostResponse) {};
}

message GetPostRequest {
  string id = 1;
}

message GetPostResponse {
  option (grpc.federation.message) = {
    def [
      { message { name: "A" } },
      { message { name: "B" } },
      { message { name: "C" } }
    ]
  };
}

message A {
  option (grpc.federation.message) = {
    def {
      call {
        method: "post.PostService/GetPost"
        request { field: "id", by: "'foo'" }
        retry {
          if: "foo"
          constant {
            interval: "1"
          }
        }
      }
    }
  };
}

message B {
  option (grpc.federation.message) = {
    def {
      call {
        method: "post.PostService/GetPost"
        request { field: "id", by: "'foo'" }
        retry {
          if: "1"
          exponential {
            initial_interval: "2"
          }
        }
      }
    }
  };
}

message C {
  option (grpc.federation.message) = {
    def {
      call {
        method: "post.PostService/GetPost"
        request { field: "id", by: "'foo'" }
        retry {
          exponential {
            max_interval: "3"
          }
        }
      }
    }
  };
}