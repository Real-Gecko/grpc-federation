syntax = "proto3";

package org.federation;

import "grpc/federation/federation.proto";
import "google/protobuf/duration.proto";

option go_package = "example/federation;federation";

service InlineEnvService {
  option (grpc.federation.service) = {
    env {
      var {
        name: "aaa"
        type { kind: STRING }
      }
      var {
        name: "bbb"
        type { repeated { kind: INT64 } }
      }
      var {
        name: "ccc"
        type { kind: INT64 }
      }
      var {
        name: "ddd"
        type { map { key { kind: STRING } value { kind: DURATION } } }
      }
      var {
        name: "eee"
        type { map { key { kind: STRING } value { kind: INT64 } } }
      }
    }
  };
  rpc GetName(GetNameRequest) returns (GetNameResponse) {};
}

service RefEnvService {
  option (grpc.federation.service) = {
    env { message: "Env" }
  };
  rpc GetName(GetNameRequest) returns (GetNameResponse) {};
}

message Env {
  string aaa = 1;
  repeated int64 bbb = 2;
  repeated int64 ccc = 3;
  map<string, google.protobuf.Duration> ddd = 4;
  map<string, google.protobuf.Duration> eee = 5;
}

message GetNameRequest {
}

message GetNameResponse {
  string aaa = 1 [(grpc.federation.field).by = "grpc.federation.env.aaa"];
}