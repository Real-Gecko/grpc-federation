syntax = "proto3";

package org.federation;

import "federation.proto";

option go_package = "example/federation;federation";

service FederationService {
  option (grpc.federation.service) = {};
  rpc Get(GetRequest) returns (GetResponse) {};
}

message GetRequest {}

message GetResponse {
  option (grpc.federation.message) = {
    def {
      name: "sel"
      message {
        name: "UserSelection"
        args { name: "value", string: "foo" }
      }
    }
  };
  User user = 1 [(grpc.federation.field).by = "sel.user"];
}

message UserSelection {
  option (grpc.federation.message) = {
    def {
      name: "m"
      message { name: "M" }
    }
  };
  oneof user {
    User user_a = 1 [
      (grpc.federation.field).oneof = {
        if: "1"
        def {
          name: "ua"
          message {
            name: "User"
            args { name: "user_id", string: "a" }
          }
        }
        by: "ua"
      }
    ];

    User user_b = 2 [
      (grpc.federation.field).oneof = {
        def {
          name: "ub"
          message {
            name: "User"
            args { name: "user_id", string: "b" }
          }
        }
        by: "ub"
      }
    ];

    User user_c = 3 [
      (grpc.federation.field).oneof = {
        default: true
        def {
          name: "uc"
          message {
            name: "User"
            args { name: "user_id", string: "c" }
          }
        }
      }
    ];

    User user_d = 4 [
      (grpc.federation.field).oneof = {
        default: true
        def {
          name: "ud"
          message {
            name: "User"
            args { name: "user_id", string: "d" }
          }
        }
        by: "ud"
      }
    ];
  }
  bool foo = 5 [(grpc.federation.field).oneof = {
    if: "true"
    by: "true"
  }];
}

message M {
  string value = 1 [(grpc.federation.field).string = "foo"];
}

message User {
  string id = 1 [(grpc.federation.field).by = "$.user_id"];
}
