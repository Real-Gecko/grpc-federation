syntax = "proto3";

package org.federation;

import "google/protobuf/any.proto";
import "grpc/federation/federation.proto";
import "post.proto";
import "user.proto";

option go_package = "example/federation;federation";

service FederationService {
  option (grpc.federation.service) = {
    dependencies: [
      { service: "org.post.PostService" },
      { service: "org.user.UserService" }
    ]
  };
  rpc GetPost(GetPostRequest) returns (GetPostResponse) {
    option (grpc.federation.method).timeout = "1m";
  };
}

message GetPostRequest {
  string id = 1;
}

message GetPostResponse {
  option (grpc.federation.message) = {
    messages: [
      {
        name: "post"
        message: "Post"
        args { name: "id", by: "$.id" }
      }
    ]
  };
  org.federation.Post post = 1 [(grpc.federation.field).by = "post"];
  string const = 2 [(grpc.federation.field).string = "foo"];
}

message Post {
  option (grpc.federation.message) = {
    resolver {
      method: "org.post.PostService/GetPost"
      request { field: "id", by: "$.id" }
      response { name: "post", field: "post", autobind: true }
      timeout: "10s"
      retry {
        constant {
          interval: "2s"
          max_retries: 3
        }
      }
    }
    messages { name: "user", message: "User", args: [{ inline: "post" }]}
    messages { name: "z", message: "Z" }
    messages { name: "m", message: "M", autobind: true }
  };
  string id = 1;
  string title = 2;
  string content = 3;
  User user = 4 [(grpc.federation.field).by = "user"];
  string foo = 5;
  int64 bar = 6;
}

enum UserType {
  option (grpc.federation.enum).alias = "org.user.UserType";

  USER_TYPE_1 = 0;
  USER_TYPE_2 = 1;
}

message User {
  option (grpc.federation.message) = {
    resolver {
      method: "org.user.UserService/GetUser"
      request { field: "id", by: "$.user_id" }
      response { name: "user", field: "user", autobind: true  }
      timeout: "20s"
      retry {
        exponential {
          initial_interval: "1s"
          randomization_factor: 0.7
          multiplier: 1.7
          max_interval: "30s"
          max_retries: 3
        }
      }
    }
  };
  string id = 1;
  UserType type = 2;
  string name = 3;
  uint64 age = 4 [(grpc.federation.field).custom_resolver = true];
  repeated string desc = 5;
  Item main_item = 6;
  repeated Item items = 7;
  map<string,google.protobuf.Any> profile = 8;
  oneof attr {
    AttrA attr_a = 9;
    AttrB b = 10;
  }
  message AttrA {
    option (grpc.federation.message).alias = "org.user.User.AttrA";
    string foo = 1;
  }
  message AttrB {
    option (grpc.federation.message).alias = "org.user.User.AttrB";
    bool bar = 2;
  }
}

message Item {
  option (grpc.federation.message).alias = "org.user.Item";

  enum ItemType {
    option (grpc.federation.enum).alias = "org.user.Item.ItemType";

    ITEM_TYPE_1 = 0;
    ITEM_TYPE_2 = 1;
    ITEM_TYPE_3 = 2;
  };

  string name = 1;
  ItemType type = 2;
  int64 value = 3;
}

message Z {
  option (grpc.federation.message).custom_resolver = true;

  string foo = 1;
}

message M {
  string foo = 1 [(grpc.federation.field).string = "foo"];
  int64 bar = 2 [(grpc.federation.field).int64 = 1];
}