{{- define "messageValidation" }}
{{- if .Error.HasIf }}
return grpcfed.If(ctx, value, "{{ .Error.If }}", func(value *localValueType) error {
	return grpcstatus.Error(grpccodes.{{ .Error.GoGRPCStatusCode }}, "{{ .Error.Message }}")
})
{{- else }}
var (
	details       []proto.Message
	validationErr bool
)
{{- range .Error.Details }}
if err := grpcfed.If(ctx, value, "{{ .If }}", func(value *localValueType) error {
	validationErr = true
	{{- template "detailMessages" . }}
	{{- range .PreconditionFailures }}
	{{- template "preconditionFailure" . }}
	{{- end }}
	{{- range .BadRequests }}
	{{- template "badRequest" . }}
	{{- end }}
	{{- range .LocalizedMessages }}
	{{- template "localizedMessage" . }}
	{{- end }}
	return nil
}); err != nil {
	return err
}
{{- end }}
if validationErr {
	status := grpcstatus.New(grpccodes.{{ .Error.GoGRPCStatusCode }}, "{{ .Error.Message }}")
	statusWithDetails, err := status.WithDetails(details...)
	if err != nil {
		s.logger.ErrorContext(ctx, "failed setting error details", slog.String("error", err.Error()))
		return status.Err()
	}
	return statusWithDetails.Err()
}
return nil
{{- end }}
{{- end }}

{{- define "detailMessages" }}
{{- $msgResolvers := .MessageResolvers }}
{{- $msgResolversLen := len $msgResolvers }}
{{- if gt $msgResolversLen 0 }}
func(){
	_, err := func() (any, error) {
		{{- if eq $msgResolversLen 1 }}
		{{- template "resolverGroup" (map "Level" 1 "Resolver" (index $msgResolvers 0)) }}
		{{- else }}
		{{- if . }}
		eg, ctx1 := errgroup.WithContext(ctx)
		{{- end }}
		{{- range $msgResolvers }}
		grpcfed.GoWithRecover(eg, func() (any, error) {
		{{- template "resolverGroup" (map "Level" 2 "Resolver" .) }}
			return nil, nil
		})
		{{- end }}
		{{- if $msgResolvers }}
		if err := eg.Wait(); err != nil {
			return nil, err
		}
		{{- end }}
		{{- end }}
		return nil, nil
	}()
	if err != nil {
		s.logger.ErrorContext(ctx, "failed resolving messages", slog.String("error", err.Error()))
		return
	}
	{{- range $i, $message := .Messages }}
	if detail := grpcfed.CustomMessage(ctx, value, "{{ $message.Name }}", {{ $i }}); detail != nil {
		details = append(details, detail)
	}
	{{- end }}
}()
{{- end }}
{{- end }}

{{- define "preconditionFailure" }}
if detail := grpcfed.PreconditionFailure(ctx, value, []*grpcfed.PreconditionFailureViolation{
	{{- range .Violations }}
	{
		Type:    "{{ .Type }}",
		Subject: "{{ .Subject }}",
		Desc:    "{{ .Description }}",
	},
	{{- end }}
}); detail != nil {
	details = append(details, detail)
}
{{- end }}

{{- define "badRequest" }}
if detail := grpcfed.BadRequest(ctx, value, []*grpcfed.BadRequestFieldViolation{
	{{- range .FieldViolations }}
	{
		Field: "{{ .Field }}",
		Desc:  "{{ .Description }}",
	},
	{{- end }}
}); detail != nil {
	details = append(details, detail)
}
{{- end }}

{{- define "localizedMessage" }}
if detail := grpcfed.LocalizedMessage(ctx, value, "{{ .Locale }}", "{{ .Message }}"); detail != nil {
	details = append(details, detail)
}
{{- end }}
