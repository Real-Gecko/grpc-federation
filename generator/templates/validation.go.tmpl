{{- define "messageValidation" }}
{{- $ctx := .Ctx }}
var stat *grpcfed.Status
{{- if .Error.VariableDefinitionSet }}
{{- template "evalDefSet" .Error.VariableDefinitionSet }}
{{- end }}
if err := grpcfed.If({{ $ctx }}, value, "{{ .Error.If.Expr }}", func(value *localValueType) error {
	var details       []grpcfed.ProtoMessage
	{{- range .Error.Details }}
	{{- if .VariableDefinitionSet }}
	if _, err := func() (any, error){
		{{- template "evalDefSet" .VariableDefinitionSet }}
		return nil, nil
	}(); err != nil {
		return err
	}
	{{- end }}
	if err := grpcfed.If({{ $ctx }}, value, "{{ .If.Expr }}", func(value *localValueType) error {
		{{- if .MessageSet }}
		if _, err := func() (any, error){
			{{- template "evalDefSet" .MessageSet }}
			return nil, nil
		}(); err != nil {
			return err
		}
		{{- end }}
		{{- range $idx, $def := .MessageSet.Definitions }}
		if detail := grpcfed.CustomMessage({{ $ctx }}, value, "{{ $def.Name }}", {{ $idx }}); detail != nil {
			details = append(details, detail)
		}
		{{- end }}
		{{- range .PreconditionFailures }}
		{{- template "preconditionFailure" . }}
		{{- end }}
		{{- range .BadRequests }}
		{{- template "badRequest" . }}
		{{- end }}
		{{- range .LocalizedMessages }}
		{{- template "localizedMessage" . }}
		{{- end }}
		return nil
	}); err != nil {
		return err
	}
	{{- end }}
	status := grpcfed.NewGRPCStatus(grpcfed.{{ .Error.GoGRPCStatusCode }}, "{{ .Error.Message }}")
	statusWithDetails, err := status.WithDetails(details...)
	if err != nil {
		s.logger.ErrorContext({{ $ctx }}, "failed setting error details", slog.String("error", err.Error()))
		stat = status
	} else {
		stat = statusWithDetails
	}
	return nil
}); err != nil {
	return err
}
return stat.Err()
{{- end }}
