{{- define "castRepeated" }}
ret := make({{ .ResponseType }}, 0, len(from))
for _, v := range from {
	{{- if .ElemRequiredCast }}
	ret = append(ret, s.{{ .ElemCastName }}(v))
	{{- else }}
	ret = append(ret, v)
	{{- end }}
}
return ret
{{- end }}

{{- define "castMessage" }}
if from == nil {
	return nil
}
{{ $oneofFields := .Oneofs }}
{{- if $oneofFields }}
ret := &{{ .Name }}{
	{{- range .Fields }}

	{{- if .RequiredCast }}
	{{ .ToFieldName }}: s.{{ .CastName }}(from.Get{{ .FromFieldName }}()),
	{{- else }}
	{{ .ToFieldName }}: from.Get{{ .FromFieldName }}(),
	{{- end }}

	{{- end }}
}
{{- range .Oneofs }}
switch {
	{{ $name := .Name }}
	{{- range .Fields }}
	case from.Get{{ .FromFieldName }}() != nil:
	{{- if .RequiredCast }}
	ret.{{ $name }} = s.{{ .CastName }}(from.Get{{ .FromFieldName }}())
	{{- else }}
	ret.{{ $name }} = from.Get{{ .FromFieldName }}()
	{{- end }}
	{{- end }}
}
{{- end }}
return ret

{{- else }}

return &{{ .Name }}{
	{{- range .Fields }}

	{{- if .RequiredCast }}
	{{ .ToFieldName }}: s.{{ .CastName }}(from.Get{{ .FromFieldName }}()),
	{{- else }}
	{{ .ToFieldName }}: from.Get{{ .FromFieldName }}(),
	{{- end }}

	{{- end }}
}

{{- end }}
{{- end }}

{{- define "castOneof" }}
if from == nil {
	return nil
}
return &{{ .Name }}{
	{{- if .RequiredCast }}
	{{ .FieldName }}: s.{{ .CastName }}(from),
	{{- else }}
	{{ .FieldName }}: from,
	{{- end }}
}
{{- end }}

{{- define "castEnum" }}
switch from {
	{{- range .FromValues }}
	case {{ .FromValue }}:
	return {{ .ToValue }}
	{{- end }}
	{{- if .DefaultValue }}
	default:
	return {{ .DefaultValue }}
	{{- end }}
}
{{- end }}
